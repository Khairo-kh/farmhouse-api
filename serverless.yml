# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: farmhouseApi
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  memorySize: 2048
  region: eu-south-1
  timeout: 15
  lambdaHashingVersion: 20201221

# you can overwrite defaults here
#  stage: dev
#  region: us-east-1

# you can add statements to the Lambda function's IAM Role here
#  iam:
#    role:
#      statements:
#        - Effect: "Allow"
#          Action:
#            - "s3:ListBucket"
#          Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#        - Effect: "Allow"
#          Action:
#            - "s3:PutObject"
#          Resource:
#            Fn::Join:
#              - ""
#              - - "arn:aws:s3:::"
#                - "Ref" : "ServerlessDeploymentBucket"
#                - "/*"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
#package:
#  patterns:
#    - '!exclude-me.js'
#    - '!exclude-me-dir/**'
#    - include-me.js
#    - include-me-dir/**

functions:
  farmhouseApiFunction:
   handler: handler.farmhouseApiFunction

#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
   events:
     - http: 
        path: /
        method: ANY
        cors: true
     - http: 
        path: /{proxy+}
        method: ANY
        cors: true


#    Define function environment variables here
   environment:
     NODE_ENV: secret.NODE_ENV
     PORT: secret.PORT
     USERNAME: secret.USERNAME
     PASSWORD: secret.PASSWORD
     DATABASE: secret.DATABASE
     DATABASE_PASSWORD: secret.DATABASE_PASSWORD
     JWT_SECRET: secret.JWT_SECRET
     JWT_EXPIRES_IN: secret.JWT_EXPIRES_IN
     JWT_COOKIE_EXPIRATION: secret.JWT_COOKIE_EXPIRATION
     EMAIL_USERNAME: secret.EMAIL_USERNAME
     EMAIL_PASSWORD: secret.EMAIL_PASSWORD
     EMAIL_HOST: secret.EMAIL_HOST
     EMAIL_PORT: secret.EMAIL_PORT
     EMAIL_FROM: secret.EMAIL_FROM
     SENDGRID_USERNAME: secret.SENDGRID_USERNAME
     SENDGRID_PASSWORD: secret.SENDGRID_PASSWORD


# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
